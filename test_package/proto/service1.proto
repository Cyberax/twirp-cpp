syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

package weather;
option go_package = "weather";
option cc_generic_services = true;

//////////////
// Testing
//////////////
message WeatherStationId {
  string id = 1 [(validate.rules).string = {
    pattern:   "^[^[0-9]A-Za-z]+( [^[0-9]A-Za-z]+)*$",
    max_bytes: 256,
  }];
}

// We do what we must, because we can
enum WeatherStationType {
  WEATHER_STATION_REAL = 0;
  WEATHER_STATION_SAT = 3;
}

// A small inline comment
message WeatherStation {
  WeatherStationId ws_id = 9;
  google.protobuf.Timestamp created_at = 2;
  WeatherStationType type = 3;

  // And this is a comment
  repeated int64 points = 1 [(validate.rules).int64.lt = 999];; // I'm making a note here: huge success
  // It's hard to overstate my satisfaction

  map<string, WeatherStation> nestedStations = 4;

  string contextData = 5;
}

// A simple test service
service WSProvider {

  // A long detached comment describing what the method does.
  // Note, it will be preserved in the generated source code.
  // Now try that with gRPC!
  rpc FindWeatherStation(WeatherStationId) returns (WeatherStation); // This is an inline comment

  rpc DeleteWeatherStation(WeatherStationId) returns (WeatherStation); // Inline 2!
  rpc UpdateWeatherStation(WeatherStation) returns (WeatherStationId);
  // This is a trailing comment. Must preserve.
}
